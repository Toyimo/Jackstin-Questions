Question List in December, 2022
===============================

| Good good study, day day up.
| 好好学习，天天向上。

.. _1工作记录:

1、工作记录
-----------

.. _w1-1205-to-1209:

W1. 1205 to 1209
~~~~~~~~~~~~~~~~

1. | 【城市高程拉直处理】实现基于道格拉斯抽稀的高程拉直平滑算法，分别测试
     ±0.8、±1.0、±1.5、±2.0
     门限的高程拉直情况，尚未全部测试完成；目前只能看到 1.5 时测试的
     LINK 就已经变成只有两个点的直线了；
   | 【城市高速拼接处高程处理】修复高程处理判断条件，只处理 RoadClass=3
     的普通道路；

2. | 【城市高程拉直处理】完成 ±0.8、±1.0、±1.5、±2.0
     门限抽稀后的高程拉直测试；
   | 【城市高程拉直处理】根据调整前后高差 >0.8 点数过多的 LINK 排查拉直
     badcase；

3. | 【城市高程拉直处理】回退道格拉斯抽稀阈值为
     0.8，新增两条波浪形高程异常处理条件：
   | a. 抽稀后出现坡度符号变化（>3次）；b.
     抽稀后短距离出现过大坡度（>3°）；
   | 出现上述场景时即重新使用 0.8x2
     的阈值重新抽稀，并依据该结果进行平滑；

4. | 【城市高速拼接处前驱后继高程断裂问题】修复一类前驱 roadclass<3
     的城市道路对齐问题；
   | 【城市高程拉直处理】优化异常处理条件，缩小异常定义范围以避免不必要的过度抽稀；
   | 【城市高程拉直处理】整理对向 LINK
     高程对齐的思路：先定位对向路口串线 LINK 组，再根据几何分类确定对向
     LINK；

5. | 广州前驱后继高程断裂问题，主要分为两类：
   | 1.【前驱 roadclass<3 系列问题】包括三种情况：
   |  (1). 前高速/城市快速路后普通道路：已修复；
   |  (2). 前普通道路后高速/城市快速路：已修复；
   |  (3). 前高速/城市快速路后高速/城市快速路：正在排查；
   | 2.【路口没包住应处理的 LINK 的问题】已反馈生产；

.. _w2-1212-to-1216:

W2. 1212 to 1216
~~~~~~~~~~~~~~~~

1. | 排查修复广州高程问题：
   | (1) 前驱后继高差过大的情况（>1.2）添加一条 LOG 进行识别输出（输出 6
     条记录）；
   |  a. 生产数据的断层问题（3个）；
   |  b. 非生产 LOG 输出，可能是高差判断边界条件问题，正在排查；
   | (2) 排查并修复路口串线高程调整后 LINK 对齐部分情况下失效问题；

2. | 排查修复广州高程问题：
   | (1) 修复右侧 LBR 与左侧 LBR 高程不一致时 LINK 右侧 LBR
     高程拉直失败的问题；
   | (2) 完成前驱后继高差过大的情况（>0.8）生产数据筛查，共 4
     条，已反馈生产；
   | (3) 排查前驱后继 LBR 和 CHA 高程不一致时的对齐问题，正在修复；

3. | 排查修复广州高程问题：
   | (1) 修复多前驱为高速时后继 LINK head 对齐错误；
   | (2) 排查修复道路左侧护栏高度没有和 LBR 对齐的问题；
   | (3) 排查多 BAC 对应一条 LBR 时的对齐问题，正在修复；

4. | 排查修复广州高程问题：
   | (1) 修复多 BAC 对应一条 LBR 时的对齐问题；
   | (2) 修复拉直时由于 LBR 和 LINK 高程不一致引起的断裂问题；
   | 高程对齐时避免隧道高程参与当前 tile 最小值计算：
   | (1) 初步明确 17 级 tile 内高程最小值时将隧道 lan 调高 5
     米的调整方案；
   | (2) 根据方案确定代码调整位置；

5. | 修复广州高程问题，主要处理了路沿高程对齐问题：
   | (1) 排查修复部分判定条件下多路沿整体对齐代码没有生效的问题；
   | (2) 排查修复城市/高速对齐时路沿高程处理异常问题；
   | (3) 排查修复城市/高速对齐时基准路段过程引起的异常断裂；
   | (4) 排查一对一路沿高程没有对齐到 LBR 的问题：路面 link 进行了平滑而
     bac 没有对应平滑；

   | 高程对齐削弱隧道影响：
   | (1) 初步完成代码，正在测试；

.. _w3-1219-to-1223:

W3. 1219 to 1223
~~~~~~~~~~~~~~~~

1. | 持续修复高程问题：
   | (1)
     修改城市/高度拼接处对齐的高差阈值（0-1m），避免过度修改路面高程；
   | (2) 初步设定 link 平滑后的 bac 对应对齐的方案：A. 不内插高程点、B.
     依据平滑后 lbr 内插高程点；
   | 高程对齐隧道高程 +5：
   | (1) 初步完成代码，完成高差计算代码并进行分析；

2. | (1) 完成平滑后路沿对齐，修复由于 geom_update 导致的 BAC
     更新失败问题；
   | (2) 检查前置高程对齐隧道高程 +5 的 viewer
     效果，隧道处高程下降且视觉感受不到明显异常；

3. | (1) 修改坡度计算代码，过滤短距离（<1m）误报，对识别出的 5
     条坡度异常（>30°）情况进行分析；异常情况现阶段基本已处理完毕；
   | (2) 检查前阶段的 LINK 拉直处理代码，梳理代码逻辑并初步合入；

4. | (1) 完善统计高程分布的辅助代码，测试高程偏移 +2、+1
     的结果，+1.5、+0 的还未测试；
   | (2)
     分析北京全域数据中的路口高程断裂问题，生成全域数据串线结果以供分析；

5. | (1)
     整理前置处理代码，提交隧道区域高程调整代码，添加高程分布统计代码；
   | (2) 统计高程偏移 +2、+1.5、+1.0、+0 的高程分布和坡度信息；

.. _w4-1226-to-1230:

W4. 1226 to 1230
~~~~~~~~~~~~~~~~

1. | 前置隧道识别并进行高程处理+高程偏移量变成 0 之后，核实：
   | **(1).
     最小的高程点无明显异常**\ ：均为原始数据中高程较低的点，渲染效果无异常；
   | **(2). 高程小于 0 的百分比情况**\ ：1.0 偏移时具有与 2.0 近似的小于
     0 占比；
   | **(3).>30° 的场景生产数据坡度有无过大的变化**\ （共 2 个）：
   |  均与生产数据相关，一种是路口与道路面高差过大、一种是 LINK
     高差过大；
   | **(4).
     走查北京全域隧道**\ ：基本与隧道未调整前保持相似渲染效果，部分隧道模型被绿地截断；

2. | (1) 排查上海高程问题：
   | 【1】生产前驱后继无 LINK 串联关系（1）：表格中更新为生产问题；
   | 【2】前驱道路面 LINK 有重叠（1）：表格中更新为生产问题；
   | 【3】立交路面生产高差过小问题（16）：表格中更新为生产问题；
   | 【4】处理后两条 LINK 出现高差（3）：正在排查；
   | (2) 高程处理结束后输出所有前驱后继关系的 LBR\\CHA\\BAC
     的高程断裂情况的 log；

3. | (1) 高程处理结束后核验断裂 LOG 增加双向路判断：
   |  筛选出 36 条，正在核验数据，需进一步约束边界以提供更准确的报出；
   | (2) 排查修复高程处理后两条 LINK 出现高差的问题：
   |  a. 排查 8tile 数据的同类问题以供测试；
   |  b. 初步定位到断头路长 LINK 处理，正在调试；

4. | (1) 修复由于在非拉直处理代码中对长 LINK
     进行线性拉直引起的桥洞被拉平的问题；
   | (2) 完成高程处理结束后检测断裂的 LOG 代码：输出 32 条记录；
   | (3) 初步了解 LD 立交压盖高程处理方案；

5. | 排查修复上海高程断裂问题（输出 log **32** 条）：
   | (1) 城市/高速高程短 LINK
     后继未与调整基线对齐（\ **3**\ ）：已修复；
   | (2) 无双向路标识的双向路引起的 LINK
     断裂（\ **23**\ ）：反馈生产（\ **6**\ ），改进 log 误报（过滤
     **17** ）;
   | (3) 路口面几何形状畸形问题（\ **1**\ ）：反馈生产；
   | (4) 前驱后继 LINK 水平间距过大 >1m 问题（\ **1**\ ）：反馈生产；
   | (5) 其他误报（\ **4**\ ）；

月度备忘录
~~~~~~~~~~

**代码 Change LOG**

.. code:: bash

   # 1215
   1. 修复前驱 roadclass<3 时前驱后继断裂的问题；
   2. 修复对向 LBR 高程不一致时高程拉直失败的问题；
   # 1229
   1. 高程前置识别隧道并进行高程修正；

**提交记录**

.. code:: bash

   git commit -m "[mapauto6-32083] 修复前驱后继 roadclass<3 的前 3 后 1/2 的对齐问题."
   git commit -m "[mapauto6-34708] 修复右 LBR 与左 LBR 高程不一致时 LINK 高程拉直失效问题."
   git commit -m "[mapauto6-34708] 修复左护栏对齐问题、护栏锯齿问题以及多前驱高速对齐问题."
   git commit -m "[mapauto6-32083] 修复拉直时由于 LBR 和 LINK 高程不一致引起的断裂问题."
   git commit -m "[mapauto6-32083] 修复城市/高速对齐时基准 LINK 过长时断裂问题、多路沿高程对齐问题; 补充断头路拉直处理代码."
   git commit -m "[mapauto6-32083] 修复平滑 LINK 的路沿对齐问题."
   git commit -m "[mapauto6-23748] 识别隧道场景并进行高程调整."
   git commit -m "[mapauto6-23748] 高程偏移去除 -1.0 并添加高程分布统计工具函数."
   git commit -m "[mapauto6-32083] 合入完整拉直代码; 修复桥洞长 LINK 拉直问题; 添加高程断裂识别输出."
   git commit -m "[mapauto6-32083] 修复城市/高速结合处短 LINK 后继高程未修正问题."

.. _2日常积累:

2、日常积累
-----------

.. _21-qgis:

2.1 QGIS
~~~~~~~~

使用 QGIS → GDAL → 矢量杂项 → 执行 SQL
语句时，需要注意几何不能为空，否则导出的 SHP
文件将会与想要的结果产生较大的偏差。

.. code:: sqlite

   SELECT * FROM BD_Junction WHERE GeomWGS84 IS NOT NULL;

SpatialLite
^^^^^^^^^^^

#spatialite

SQLite 是遵循 ACID
的轻量型数据库管理系统，其核心是由相对较小的C代码实现的，具有简单、稳定、易于使用和真正的轻量等特点。
每个 SQLite
数据库都是一个简单文件，用户可以方便地复制、压缩，并通过网络进行传输和交换。
SQLite
程序本身是跨平台的，其数据库文件也是跨平台的，其嵌入式设计被集成到许多系统与平台中。SpatiaLite
是 SQLite 数据的空间数据引擎。

参考文献 6 是其官方网站，主要提供了 libspatialite、spatialite-tools
命令行工具以及 spatialite-gui 可视化界面等工具以对 SQLite
数据库进行空间拓展。CentOS 目前提供的 libspatialite 版本为 4.1.1，安装
spatialite-tools 时也应选择 4.1.1 以免编译失败。

   SpatiaLite 符合 OGC SFSQL标准，在 SQLite 数据库 SQL
   语句的基础上支持一些常见的 SQL 空间查询函数以供使用，如：
   ``AsText()``\ ， ``GeomFromText()`` ， ``Area()``\ ， ``PointN()``
   等。

SpatiaLite
提供的大多数的空间查询方法可以被分组到以下四个分类当中（Stolze
2003），除非另有声明，以上提到的方法和函数都在同一个2D坐标维数空间下操作。：

1. | **几何构型和外在数据格式的转化**\ ：
   | 几何要素的表达对应有 WKT、WKB以及 Geography Markup Language(GML)
     三种数据格式。这三者可以相互转换，如 WKT 数据可以用 ``ST_WKTToSQL``
     向\ ``ST_Geometry`` 转化， ``ST_AsText`` 用于\ ``ST_Geometry`` 值向
     WKT 的转化。

2. | **从几何构型中检索特征或度量**\ ， 例如：
   | ``ST_Dimension`` ：翻译一个 ST_Geometry 值的维数。
   | ``ST_GeometryType`` ：返回一个 ST_Geometry 值的类型。
   | ``ST_SRID`` : 评述或更换空间参考系统运算符。
   | ``ST_IsMeasured`` ：检测 ST_Geometry 值是否被测量。

3. | **比较两个几何构型的空间关系**\ ， 例如：
   | ``ST_Equals`` ：测试两个几何构型的空间相等性。
   | ``ST_Disjoint`` ：测试两个几何构型是否相交。
   | ``ST_Intersects``, ``ST_Crosses`` , ``ST_Overlaps``
     ：测试几何构型的内部是否相交。
   | ``ST_Touches`` ：测试两个几何构型是否在边界处相接，但内部却不相交。

4. | **从其他中产生新的几何构型**\ ，例如：
   | ``ST_Buffer`` ：产生给定几何构型周围一定距离的缓冲区。
   | ``ST_ConvexHull`` ：计算几何构型的凸边界。
   | ``ST_Difference`` , ``ST_Intersection`` 以及 ``ST_Union``
     ：重构点集之间的差、交、并拓扑计算。

.. _22-业务知识:

2.2 业务知识
~~~~~~~~~~~~

道路相关
^^^^^^^^

IC, *Inter Change*

.. code:: bash

   高速公路转换出入口，即高速公路至一般公路的出入匝道。
   “IC” 标识可以下高速公路。

JC, *Joint Change/Circuit*

.. code:: bash

   高速公路连接口或连接匝道，即不同高速公路之间的连接线路。
   “JC” 标识可以直接转到另一条高速公路上。

导航地图等级
^^^^^^^^^^^^

目前，行业将导航地图划为三个等级：

   | ``SD``\ ：主要帮助司机进行导航，精度要求不高，一般是在 15
     米左右，由粒度较粗的道路拓扑信息构成。
   | ``LD``\ ：主要用于辅助驾驶，加入了车道级的拓扑信息，精度一般在亚米级别。
   | ``HD``\ ：主要用于自动驾驶，精度达到了厘米级别，还包含了丰富的语义信息。

.. _23-编译:

2.3 编译
~~~~~~~~

#vscode-no_module_named_site

提示 ImportError: No module named site 错误
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code:: bash

   unset PYTHONPATH
   unset PYTHONHOME

解决 oh-my-zsh git 进入目录卡顿问题
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code:: bash

   # 设置 oh-my-zsh 不读取文件变化信息（在 git 项目目录执行下列命令）
   git config --add oh-my-zsh.hide-dirty 1

C++ NAN 值生成及判断
^^^^^^^^^^^^^^^^^^^^

#cplusplus

.. code:: c++

   #include <iostream>
   #include <cmath>

   int main(){
       double x = std::numeric_limits<double>::quiet_NaN();
       std::cout << std::isnan(x) << std::endl;
       x = 2.0;
       std::cout << std::isnan(x) << std::endl;
   }

参考文献
~~~~~~~~

1. CSDN 博客.
   `空间数据索引RTree完全解析 <https://blog.csdn.net/wzf1993/article/details/79547037>`__\ [EB/OL].

2. Go 语言社区. `CentOS使用yum指令显示"ImportError: No module named
   site"错误。 <http://club.coder55.com/article?id=67683>`__\ [EB/OL].

3. GitHub. `解决 oh-my-zsh git 进入目录卡顿问题
   #11 <https://github.com/yangruihan/blog/issues/11>`__\ [EB/OL].

4. Python与开源GIS. `7.4. 开始使用
   SpatiaLite <https://www.osgeo.cn/pygis/spatialite-begin.html>`__\ [EB/OL].

5. CSDN 博客. `Spatialite 操作 Sql
   语句 <https://blog.csdn.net/qq_38370387/article/details/102975611>`__\ [EB/OL].

6. RD 文档.
   `安装SpatiaLite <https://www.gaia-gis.it/gaia-sins/index.html>`__\ [EB/OL].

7. 百家号. `百度自动驾驶有哪些独特优势？Apollo
   Day给出了这些干货 <https://baijiahao.baidu.com/s?id=1751517910701499062&wfr=spider&for=pc>`__\ [EB/OL].
